name: Tests

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff

      - name: Lint with ruff
        run: ruff check litepcie/ test/

  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r test/requirements.txt
          pip install pytest pytest-cov

      - name: Run unit tests with coverage
        run: |
          pytest test/ -v --cov=litepcie --cov-report=xml --cov-report=term

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml

  cocotb-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Verilator
        run: |
          sudo apt-get update
          sudo apt-get install -y verilator

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r test/requirements.txt
          pip install cocotb cocotb-test

      - name: Run cocotb tests
        run: |
          if [ -d "test/dll/cocotb" ]; then
            cd test/dll/cocotb
            make
          else
            echo "Cocotb tests directory not yet created - skipping"
          fi

      - name: Check Verilator coverage
        run: |
          if [ -f "coverage.dat" ]; then
            verilator_coverage --annotate coverage_output/ coverage.dat
          else
            echo "No coverage.dat found - skipping"
          fi
